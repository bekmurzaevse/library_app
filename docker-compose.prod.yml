version: '3.3'

services:
  nginx:
    image: nginx:latest
    container_name: project_nginx
    volumes:
      - ./:/var/www/backend
      - ./_docker/images/nginx/production:/etc/nginx/conf.d
      - nginx_data:/etc/nginx
      - nginx_logs:/etc/nginx/logs
    ports:
      - 80:80
      - 443:443
    restart: always
    depends_on:
      - php
    networks:
      - project_network

  php:
    build:
      context: .
      dockerfile: ./_docker/images/php/Dockerfile
    container_name: project_php
    volumes:
      - ./:/var/www/backend
    restart: always
    networks:
      - project_network

  postgres:
    image: postgres:14
    container_name: project_postgres
    restart: always
    environment:
      POSTGRES_DB: library_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 123
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - project_network

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: project_pgadmin
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: admin123
  #   ports:
  #     - "5050:80"
  #   networks:
  #     - project_network
  #   depends_on:
  #     - postgres

  redis:
    image: redis:latest
    container_name: project_redis
    command:
      [
          "sh",
          "-c",
          "redis-server --requirepass $${REDIS_PASSWORD}"
      ]
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - project_network

networks:
  project_network:
    driver: bridge

volumes:
  nginx_data:
    driver: local
  nginx_logs:
    driver: local
  pgdata:
    driver: local
  mysql_data:
    driver: local
  redis_data:
    driver: local
